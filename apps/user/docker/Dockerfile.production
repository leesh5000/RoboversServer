FROM node:22-alpine AS builder

# 작업 디렉토리 설정
WORKDIR /app

# package.json과 package-lock.json 복사
COPY package*.json ./
COPY tsconfig*.json ./
COPY nest-cli.json ./

# 의존성 설치
RUN npm ci

# 소스 코드 복사
COPY apps/user apps/user
COPY libs libs

# Prisma 클라이언트 생성
RUN npx prisma generate --schema=apps/user/prisma/schema.prisma

# 빌드
RUN npm run build user

# 프로덕션 스테이지
FROM node:22-alpine

# 보안을 위한 non-root 사용자 생성
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001

WORKDIR /app

# package.json과 package-lock.json 복사
COPY package*.json ./

# 프로덕션 의존성만 설치
RUN npm ci --only=production && npm cache clean --force

# 빌드된 애플리케이션 복사
COPY --from=builder --chown=nodejs:nodejs /app/dist/apps/user ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nodejs:nodejs /app/apps/user/prisma ./prisma

# 포트 노출
EXPOSE 4001

# 헬스체크 추가
HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:4001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); })"

# non-root 사용자로 전환
USER nodejs

# 프로덕션 환경 설정
ENV NODE_ENV=production

# 애플리케이션 실행
CMD ["node", "dist/main"]